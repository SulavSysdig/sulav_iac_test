prometheus:
  file: true
  yaml:
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
    scrape_configs:
      - job_name: 'k8s-pods'
        tls_config:
          insecure_skip_verify: true
        kubernetes_sd_configs:
        - role: pod
        relabel_configs:
          # Trying to ensure we only scrape local targets
          # __HOSTIPS__ is replaced by promscrape with a regex list of the IP addresses
          # of all the active network interfaces on the host
        - action: keep
          source_labels: [__meta_kubernetes_pod_host_ip]
          regex: __HOSTIPS__
        - action: keep
          source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
          regex: true
        - action: replace
          source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scheme]
          target_label: __scheme__
          regex: (https?)
        - action: replace
          source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
          target_label: __metrics_path__
          regex: (.+)
        - action: replace
          source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
          regex: ([^:]+)(?::\d+)?;(\d+)
          replacement: $1:$2
          target_label: __address__
          # Holding on to pod-id and container name so we can associate the metrics
          # with the container (and cluster hierarchy)
        - action: replace
          source_labels: [__meta_kubernetes_pod_uid]
          target_label: sysdig_k8s_pod_uid
        - action: replace
          source_labels: [__meta_kubernetes_pod_container_name]
          target_label: sysdig_k8s_pod_container_name
      - job_name: etcd
        scheme: https
        tls_config:
          insecure_skip_verify: true
          cert_file: /etc/kubernetes/pki/etcd-manager/etcd-clients-ca.crt
          key_file: /etc/kubernetes/pki/etcd-manager/etcd-clients-ca.key
        kubernetes_sd_configs:
        - role: pod
        relabel_configs:
        - action: keep
          source_labels: [__meta_kubernetes_pod_host_ip]
          regex: __HOSTIPS__
        - action: keep
          source_labels:
          - __meta_kubernetes_namespace
          - __meta_kubernetes_pod_name
          separator: '/'
          regex: 'kube-system/etcd-manager-main.+'
        - source_labels:
          - __address__
          action: replace
          target_label: __address__
          regex: (.+?)(\\:\\d)?
          replacement: $1:4001
          # Holding on to pod-id and container name so we can associate the metrics
          # with the container (and cluster hierarchy)
        - action: replace
          source_labels: [__meta_kubernetes_pod_uid]
          target_label: sysdig_k8s_pod_uid
        - action: replace
          source_labels: [__meta_kubernetes_pod_container_name]
          target_label: sysdig_k8s_pod_container_name

      - job_name: control-plane
        honor_labels: true
        metrics_path: '/federate'
        params:
          'match[]':
            - '{sysdig="true"}'
        kubernetes_sd_configs:
        - role: pod
        relabel_configs:
        - action: keep
          source_labels: [__meta_kubernetes_pod_host_ip]
          regex: __HOSTIPS__
        - action: keep
          source_labels:
          - __meta_kubernetes_namespace
          - __meta_kubernetes_pod_name
          separator: '/'
          regex: 'monitoring/prometheus-controlplane-server-0'
        - source_labels:
          - __address__
          action: replace
          target_label: __address__
          regex: (.+?)(\\:\\d)?
          replacement: $1
          # Holding on to pod-id and container name so we can associate the metrics
          # with the container (and cluster hierarchy)
        - action: replace
          source_labels: [__meta_kubernetes_pod_uid]
          target_label: sysdig_k8s_pod_uid
        - action: replace
          source_labels: [__meta_kubernetes_pod_container_name]
          target_label: sysdig_k8s_pod_container_name
          
      - job_name: postgres-default
        tls_config:
          insecure_skip_verify: true
        kubernetes_sd_configs:
        - role: pod
        relabel_configs:
        - action: keep
          source_labels: [__meta_kubernetes_pod_host_ip]
          regex: __HOSTIPS__
        - action: keep
          source_labels:
          - __meta_kubernetes_pod_annotation_promcat_sysdig_com_integration_type
          regex: 'postgres'
        - action: replace
          source_labels: [__meta_kubernetes_pod_annotation_promcat_sysdig_com_target_ns]
          target_label: kube_namespace_name
        - action: replace
          source_labels: [__meta_kubernetes_pod_annotation_promcat_sysdig_com_target_workload_type]
          target_label: kube_workload_type
        - action: replace
          source_labels: [__meta_kubernetes_pod_annotation_promcat_sysdig_com_target_workload_name]
          target_label: kube_workload_name
        - action: replace
          replacement: true
          target_label: sysdig_omit_source
        - action: replace
          source_labels: [__address__, __meta_kubernetes_pod_annotation_promcat_sysdig_com_port]
          regex: ([^:]+)(?::\d+)?;(\d+)
          replacement: $1:$2
          target_label: __address__
        - action: replace
          source_labels: [__meta_kubernetes_pod_uid]
          target_label: sysdig_k8s_pod_uid
        - action: replace
          source_labels: [__meta_kubernetes_pod_container_name]
          target_label: sysdig_k8s_pod_container_name
