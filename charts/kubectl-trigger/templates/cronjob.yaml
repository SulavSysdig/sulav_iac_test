apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: {{ include "kubectl-trigger.fullname" . }}
  labels:
{{ include "kubectl-trigger.labels" . | indent 4 }}
spec:
  schedule: {{ .Values.schedule | quote }}
  failedJobsHistoryLimit: {{ .Values.failedJobsHistoryLimit }}
  successfulJobsHistoryLimit: {{ .Values.successfulJobsHistoryLimit }}
  {{ if .Values.concurrencyPolicy }}
  concurrencyPolicy:  {{ .Values.concurrencyPolicy }}
  {{ end }}
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/name: {{ include "kubectl-trigger.name" . }}
            app.kubernetes.io/instance: {{ .Release.Name }}
        spec:
          serviceAccountName: {{ include "kubectl-trigger.fullname" . }}
          containers:
            - name: {{ .Chart.Name }}
              image: {{ include "kubectl-trigger.image" . }}
              imagePullPolicy: {{ .Values.image.pullPolicy }}
              resources:
                requests: 
                  memory: 1M
                  cpu: 250m
                limits:
                  memory: 200M
                  cpu: 500m
              command:
                - {{ .Values.interpreter }}
              args:
                - /script/main.sh
              volumeMounts:
                - name: manifests-volume
                  mountPath: /manifests
                - name: script-volume
                  mountPath: /script
                {{ if or (ne .Values.kubeconfig "") (ne .Values.kubeconfigSecretName "") }}
                - name: kubeconfig-volume
                  mountPath: /kubeconfig
                  readOnly: true
                {{ end }}
                {{ if .Values.apitoken }}
                - name: apitoken-volume
                  mountPath: /apitoken
                {{ end }}
              env:
                {{ if or (ne .Values.kubeconfig "") (ne .Values.kubeconfigSecretName "") }}
                - name: KUBECONFIG
                  value: /kubeconfig/kubeconfig
                {{ end }}
          restartPolicy: {{ .Values.restartPolicy }}
          volumes:
            {{ if .Values.kubeconfigSecretName }}
            - name: kubeconfig-volume
              secret:
                secretName: {{ .Values.kubeconfigSecretName }}
            {{ end }}
            {{ if .Values.kubeconfig }}
            - name: kubeconfig-volume
              secret:
                secretName: {{ include "kubectl-trigger.fullname" . }}
            {{ end }}
            {{ if and (ne .Values.kubeconfig "") (ne .Values.kubeconfigSecretName "") }}
              {{ fail "ERROR: kubeconfig and kubeconfigSecretName cannot be both defined" }}
            {{ end }}
            - name: manifests-volume
              configMap:
                name: {{ include "kubectl-trigger.fullname" . }}-manifests
            - name: script-volume
              configMap:
                name: {{ include "kubectl-trigger.fullname" . }}-script
            {{ if .Values.apitoken }}
            - name: apitoken-volume
              secret:
                secretName: {{ include "kubectl-trigger.fullname" . }}-apitoken
            {{ end }}
