repositories:
  - name: jenkins
    url: https://charts.jenkins.io
  - name: incubator
    url: https://charts.helm.sh/incubator
releases:
  - name: jenkins-secrets
    namespace: jenkins
    chart: incubator/raw
    values:
    - resources:
      - apiVersion: v1
        kind: Secret
        metadata:
          # this is the jenkins id.
          name: "docker-repository-credentials"
          labels:
            # so we know what type it is.
            "jenkins.io/credentials-type": "usernamePassword"
          annotations:
            # description - can not be a label as spaces are not allowed
            "jenkins.io/credentials-description" : "Docker Repository Credentials"
        type: Opaque
        stringData:
          username: {{ requiredEnv "JENKINS_DOCKER_REPOSITORY_USER" }}
          password: {{ requiredEnv "JENKINS_DOCKER_REPOSITORY_PASS" }}
      - apiVersion: v1
        kind: Secret
        metadata:
          # this is the jenkins id.
          name: "sysdig-secure-api-credentials"
          labels:
            # so we know what type it is.
            "jenkins.io/credentials-type": "usernamePassword"
          annotations:
            # description - can not be a label as spaces are not allowed
            "jenkins.io/credentials-description" : "Sysdig Secure API Token"
        type: Opaque
        stringData:
          username: ''
          password: {{ requiredEnv "SECURE_API_TOKEN" }}

  - name: jenkins
    namespace: jenkins
    atomic: true
    # TODO: In order to migrate to 3.0.0, XML config is disabled, so we need jobs using Job DSL. See https://wiki.jenkins.io/display/JENKINS//XML+Job+to+Job+DSL
    version: 2.19.0
    chart: jenkins/jenkins
    needs: ["jenkins/jenkins-secrets"]
    values:
    - rbac:
        readSecrets: true
      persistence:
        enabled: false
      serviceAccount:
        name: jenkins
        create: false
      serviceAccountAgent:
        name: jenkins
        create: false
      master:
        route:
          enabled: true
        useSecurity: false
        authorizationStrategy: ""
        securityRealm: ""
        installPlugins:
        - kubernetes:latest
        - script-security:latest
        - kubernetes-credentials-provider:latest
        - sysdig-secure:latest
        - credentials-binding:latest
        - workflow-aggregator:latest # Pipeline
        - git:latest
        # TODO: Should migrate the XML configuration to JCasC
        JCasC:
          enabled: false
        enableXmlConfig: true
        jobs:
          BuildAndScanTraefikImage: |-
            <?xml version='1.1' encoding='UTF-8'?>
            <flow-definition plugin="workflow-job@2.36">
              <actions>
                <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.5.1"/>
                <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.5.1">
                  <jobProperties/>
                  <triggers/>
                  <parameters/>
                  <options/>
                </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
              </actions>
              <description></description>
              <displayName>Build and Scan Traefik image</displayName>
              <keepDependencies>false</keepDependencies>
              <properties/>
              <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.78">
                <script>pipeline {
              agent {
                  kubernetes {
                      yaml &quot;&quot;&quot;
            apiVersion: v1
            kind: Pod
            metadata:
                name: img
                annotations:
                  container.apparmor.security.beta.kubernetes.io/img: unconfined
                  container.seccomp.security.alpha.kubernetes.io/img: unconfined
            spec:
                containers:
                  - name: img
                    image: r.j3ss.co/img
                    command: [&apos;cat&apos;]
                    tty: true
            &quot;&quot;&quot;
                  }
              }

              stages {
                  stage(&apos;Preparation&apos;) {
                    steps {
                        writeFile file: &apos;Dockerfile&apos;, text: &quot;&quot;&quot;
            FROM python:3-alpine
            WORKDIR /sdc_client
            COPY . /sdc_client
            RUN pip install django
            ENTRYPOINT [&quot;python&quot;, &quot;sdc_client&quot;]
            &quot;&quot;&quot;
                    }
                  }

                  stage(&apos;Build image&apos;) {
                      steps {
                          container(&apos;img&apos;) {
                            sh &quot;img build . -t traefik:maroilles&quot;
                            writeFile file: &apos;sysdig_secure_images&apos;, text: &apos;traefik:maroilles&apos;
                          }
                      }
                  }

                  stage(&apos;Scan image&apos;) {
                      steps {
                        sysdig engineCredentialsId: &apos;sysdig-secure-api-credentials&apos;, name: &apos;sysdig_secure_images&apos;
                      }
                  }
              }
            }
            </script>
                <sandbox>true</sandbox>
              </definition>
              <triggers/>
              <disabled>false</disabled>

          SysdigCICDcronagent: |-
            <?xml version='1.1' encoding='UTF-8'?>
            <flow-definition plugin="workflow-job@2.32">
              <actions>
                <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.3.6"/>
                <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.3.6">
                  <jobProperties/>
                  <triggers/>
                  <parameters/>
                  <options/>
                </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
              </actions>
              <displayName>Sysdig CICD cronagent</displayName>
              <description>Builds and uploads the cronagent image, scans for vulnerabilities with Sysdig Plugin</description>
              <keepDependencies>false</keepDependencies>
              <properties/>
              <definition class="org.jenkinsci.plugins.workflow.cps.CpsScmFlowDefinition" plugin="workflow-cps@2.64">
                <scm class="hudson.plugins.git.GitSCM" plugin="git@3.9.3">
                  <configVersion>2</configVersion>
                  <userRemoteConfigs>
                    <hudson.plugins.git.UserRemoteConfig>
                      <url>https://github.com/sysdiglabs/dummy-vuln-app.git</url>
                    </hudson.plugins.git.UserRemoteConfig>
                  </userRemoteConfigs>
                  <branches>
                    <hudson.plugins.git.BranchSpec>
                      <name>*/master</name>
                    </hudson.plugins.git.BranchSpec>
                  </branches>
                  <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
                  <submoduleCfg class="list"/>
                  <extensions/>
                </scm>
                <scriptPath>Jenkinsfile</scriptPath>
                <lightweight>true</lightweight>
              </definition>
              <triggers/>
              <disabled>false</disabled>
            </flow-definition>

  - name: jenkins-ocp
    namespace: jenkins
    chart: incubator/raw
    values:
    - resources:
      - apiVersion: v1
        kind: ServiceAccount
        metadata:
          name: jenkins
      - apiVersion: security.openshift.io/v1
        kind: SecurityContextConstraints
        metadata:
          annotations:
            kubernetes.io/description: |
              This provides the minimum requirements to Jenkins to run in the Openshift.
          name: jenkins
        allowHostDirVolumePlugin: true
        allowHostIPC: false
        allowHostNetwork: true
        allowHostPID: true
        allowHostPorts: false
        allowPrivilegeEscalation: true
        allowPrivilegedContainer: true
        allowedCapabilities: []
        allowedUnsafeSysctls: []
        defaultAddCapabilities: []
        fsGroup:
          type: RunAsAny
        groups: []
        priority: 0
        readOnlyRootFilesystem: false
        requiredDropCapabilities: []
        runAsUser:
          type: RunAsAny
        seLinuxContext:
          type: RunAsAny
        seccompProfiles:
        - '*'
        supplementalGroups:
          type: RunAsAny
        users:
        - system:serviceaccount:jenkins:jenkins
        volumes:
        - hostPath
        - emptyDir
        - secret
        - configMap

